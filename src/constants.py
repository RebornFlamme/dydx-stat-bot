from dydx3.constants import API_HOST_GOERLI, API_HOST_MAINNET
from decouple import config 

# Select Mode 
MODE = "DEVELOPMENT"

# Close all open positions and orders 
ABORT_ALL_POSITIONS = False

# Find cointagrated pairs
FIND_COINTEGRATED = False

# Place Trades
PLACE_TRADES = True

# Resolution
RESOLUTION = "1HOUR"

# Stats Window 
WINDOW = 21 

# Tresholds - Opening 
MAX_HALF_LIFE = 24
ZSCORE_TRESH = 1.5
USD_PER_TRADE = 50
USD_MIN_COLLATERAL = 1880

# Tresholds - Closing 
CLOSE_AT_ZSCORE_CROSS = True 

# Ethereum Address
ETHEREUM_ADDRESS = "0xc1D0897cdaFdb651e92E49899fDA4cb083b92C16"

# Wallet Private Key
ETH_PRIVATE_KEY = config("ETH_PRIVATE_KEY")

# KEYS - Production 
STARK_PRIVATE_KEY_MAINNET = config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNET = config("DYDX_API_KEY_MAINNET")
DYDX_API_SECRET_MAINNET = config("DYDX_API_SECRET_MAINNET")
DYDX_API_PASSPHRASE_MAINNET = config("DYDX_API_PASSPHRASE_MAINNET")

# KEYS - Testnet 
STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")

# KEYS - Export 
STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET if MODE == "PRODUCTION" else STARK_PRIVATE_KEY_TESTNET
DYDX_API_KEY = DYDX_API_KEY_MAINNET if MODE == "PRODUCTION" else DYDX_API_KEY_TESTNET 
DYDX_API_SECRET = DYDX_API_SECRET_MAINNET if MODE == "PRODUCTION" else DYDX_API_SECRET_TESTNET
DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_MAINNET if MODE == "PRODUCTION" else DYDX_API_PASSPHRASE_TESTNET

# HOST - Export 
HOST = API_HOST_MAINNET if MODE == "PRODUCTION" else API_HOST_GOERLI

# HTTP PROVIDER 
HTTP_PROVIDER_MAINNET = config("HTTP_PROVIDER_MAINNET")
HTTP_PROVIDER_TESTNET = config("HTTP_PROVIDER_TESTNET")

# HTTP PROVIDER - Export 
HTTP_PROVIDER = HTTP_PROVIDER_MAINNET if MODE == "PRODUCTION" else HTTP_PROVIDER_TESTNET

